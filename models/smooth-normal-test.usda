#usda 1.0
(
    defaultPrim = "root"
    doc = "Blender v4.1.0"
    metersPerUnit = 1
    upAxis = "Z"
)

def Xform "root" (
    customData = {
        dictionary Blender = {
            bool generated = 1
        }
    }
)
{
    def Xform "Grid"
    {
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "Mesh"
        {
            float3[] extent = [(-1, -1, 0), (1, 1, 0.5240923)]
            int[] faceVertexCounts = [4, 4]
            int[] faceVertexIndices = [0, 1, 3, 2, 2, 3, 5, 4]
            normal3f[] normals = [(0, -0.4642035, 0.88572854), (0, -0.4642035, 0.88572854), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0.4642035, 0.88572854), (0, 0.4642035, 0.88572854)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(-1, -1, 0), (1, -1, 0), (-1, 0, 0.5240923), (1, 0, 0.5240923), (-1, 1, 0), (1, 1, 0)]
            texCoord2f[] primvars:UVMap = [(0, 0), (1, 0), (1, 0.5), (0, 0.5), (0, 0.5), (1, 0.5), (1, 1), (0, 1)] (
                interpolation = "faceVarying"
            )
            uniform token subdivisionScheme = "none"
        }
    }

    def Xform "Camera"
    {
        matrix4d xformOp:transform = ( (0.6859206557273865, 0.7276763319969177, 0, 0), (-0.32401347160339355, 0.305420845746994, 0.8953956365585327, 0), (0.6515582203865051, -0.6141703724861145, 0.44527140259742737, 0), (7.358891487121582, -6.925790786743164, 4.958309173583984, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Camera "Camera"
        {
            float2 clippingRange = (0.1, 100)
            float focalLength = 0.5
            float horizontalAperture = 0.36
            float horizontalApertureOffset = 0
            token projection = "perspective"
            float verticalAperture = 0.2025
            float verticalApertureOffset = 0
        }
    }

    def Xform "Light"
    {
        matrix4d xformOp:transform = ( (-0.29086464643478394, 0.9551711678504944, -0.05518905818462372, 0), (-0.7711008191108704, -0.1998833566904068, 0.6045247316360474, 0), (0.5663931965827942, 0.21839119493961334, 0.7946722507476807, 0), (4.076245307922363, 1.0054539442062378, 5.903861999511719, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def SphereLight "Light"
        {
            float3[] extent = [(-0.1, -0.1, -0.1), (0.1, 0.1, 0.1)]
            color3f inputs:color = (1, 1, 1)
            float inputs:diffuse = 1
            float inputs:exposure = 0
            float inputs:intensity = 318.30988
            bool inputs:normalize = 1
            float inputs:radius = 0.1
            float inputs:specular = 1
        }
    }
}

