#usda 1.0
(
    defaultPrim = "root"
    doc = "Blender v4.1.1"
    endTimeCode = 250
    metersPerUnit = 1
    startTimeCode = 1
    timeCodesPerSecond = 24
    upAxis = "Z"
)

def Xform "root" (
    customData = {
        dictionary Blender = {
            bool generated = 1
        }
    }
)
{
    def Xform "Camera"
    {
        matrix4d xformOp:transform = ( (0.6859206557273865, 0.7276763319969177, 0, 0), (-0.32401347160339355, 0.305420845746994, 0.8953956365585327, 0), (0.6515582203865051, -0.6141703724861145, 0.44527140259742737, 0), (7.358891487121582, -6.925790786743164, 4.958309173583984, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Camera "Camera"
        {
            float2 clippingRange = (0.1, 100)
            float focalLength = 0.5
            float horizontalAperture = 0.36
            float horizontalApertureOffset = 0
            token projection = "perspective"
            float verticalAperture = 0.2025
            float verticalApertureOffset = 0
        }
    }

    def Xform "Light"
    {
        matrix4d xformOp:transform = ( (-0.29086464643478394, 0.9551711678504944, -0.05518905818462372, 0), (-0.7711008191108704, -0.1998833566904068, 0.6045247316360474, 0), (0.5663931965827942, 0.21839119493961334, 0.7946722507476807, 0), (4.076245307922363, 1.0054539442062378, 5.903861999511719, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def SphereLight "Light"
        {
            float3[] extent = [(-0.1, -0.1, -0.1), (0.1, 0.1, 0.1)]
            color3f inputs:color = (1, 1, 1)
            float inputs:diffuse = 1
            float inputs:exposure = 0
            float inputs:intensity = 318.30988
            bool inputs:normalize = 1
            float inputs:radius = 0.1
            float inputs:specular = 1
        }
    }

    def SkelRoot "Cube"
    {
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "Cube" (
            prepend apiSchemas = ["MaterialBindingAPI", "SkelBindingAPI"]
        )
        {
            uniform bool doubleSided = 1
            float3[] extent = [(-1, -1, -1), (1, 1, 1)]
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [0, 4, 6, 2, 3, 2, 6, 7, 7, 6, 4, 5, 5, 1, 3, 7, 1, 0, 2, 3, 5, 4, 0, 1]
            rel material:binding = </root/_materials/Material>
            normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(1, 1, 1), (1, 1, -1), (1, -1, 1), (1, -1, -1), (-1, 1, 1), (-1, 1, -1), (-1, -1, 1), (-1, -1, -1)]
            bool[] primvars:sharp_face = [1, 1, 1, 1, 1, 1] (
                interpolation = "uniform"
            )
            int[] primvars:skel:jointIndices = [0, 0, 0, 0, 0, 0, 0, 0] (
                elementSize = 1
                interpolation = "vertex"
            )
            float[] primvars:skel:jointWeights = [1, 1, 1, 1, 1, 1, 1, 1] (
                elementSize = 1
                interpolation = "vertex"
            )
            texCoord2f[] primvars:UVMap = [(0.625, 0.5), (0.875, 0.5), (0.875, 0.75), (0.625, 0.75), (0.375, 0.75), (0.625, 0.75), (0.625, 1), (0.375, 1), (0.375, 0), (0.625, 0), (0.625, 0.25), (0.375, 0.25), (0.125, 0.5), (0.375, 0.5), (0.375, 0.75), (0.125, 0.75), (0.375, 0.5), (0.625, 0.5), (0.625, 0.75), (0.375, 0.75), (0.375, 0.25), (0.625, 0.25), (0.625, 0.5), (0.375, 0.5)] (
                interpolation = "faceVarying"
            )
            uniform token[] skel:blendShapes = ["Key_1"]
            rel skel:blendShapeTargets = </root/Cube/Cube/Key_1>
            prepend rel skel:skeleton = </root/Cube/Skel>
            uniform token subdivisionScheme = "none"

            def BlendShape "Key_1"
            {
                uniform vector3f[] offsets = [(0, 0.6491337, 1.0786333), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0.6491337, 1.0786333), (0, 0, 0), (0, 0, 0), (0, 0, 0)]
                uniform int[] pointIndices = [0, 1, 2, 3, 4, 5, 6, 7]
            }
        }

        def Skeleton "Skel" (
            prepend apiSchemas = ["SkelBindingAPI"]
        )
        {
            uniform matrix4d[] bindTransforms = [( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )]
            uniform token[] joints = ["joint1"]
            uniform matrix4d[] restTransforms = [( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )]
            prepend rel skel:animationSource = </root/Cube/Skel/Anim>

            def SkelAnimation "Anim"
            {
                uniform token[] blendShapes = ["Key_1"]
                float[] blendShapeWeights.timeSamples = {
                    1: [0.008018662],
                    2: [0.030908298],
                    3: [0.06691938],
                    4: [0.11430238],
                    5: [0.17130779],
                    6: [0.23618606],
                    7: [0.3071877],
                    8: [0.3825631],
                    9: [0.46056277],
                    10: [0.5394373],
                    11: [0.617437],
                    12: [0.6928124],
                    13: [0.763814],
                    14: [0.8286924],
                    15: [0.8856976],
                    16: [0.9330808],
                    17: [0.9690918],
                    18: [0.9919814],
                    19: [1],
                    20: [0.9964246],
                    21: [0.98619175],
                    22: [0.97004104],
                    23: [0.9487123],
                    24: [0.9229452],
                    25: [0.89347947],
                    26: [0.8610548],
                    27: [0.8264109],
                    28: [0.7902876],
                    29: [0.7534246],
                    30: [0.71656156],
                    31: [0.68043834],
                    32: [0.64579445],
                    33: [0.6133698],
                    34: [0.583904],
                    35: [0.55813694],
                    36: [0.5368082],
                    37: [0.52065754],
                    38: [0.5104246],
                    39: [0.5068493],
                    40: [0.5068493],
                    41: [0.5068493],
                    42: [0.5068493],
                    43: [0.5068493],
                    44: [0.5068493],
                    45: [0.5068493],
                    46: [0.5068493],
                    47: [0.5068493],
                    48: [0.5068493],
                    49: [0.5068493],
                    50: [0.5068493],
                    51: [0.5068493],
                    52: [0.5068493],
                    53: [0.5068493],
                    54: [0.5068493],
                    55: [0.5068493],
                    56: [0.5068493],
                    57: [0.5068493],
                    58: [0.5068493],
                    59: [0.5068493],
                    60: [0.5068493],
                    61: [0.5068493],
                    62: [0.5068493],
                    63: [0.5068493],
                    64: [0.5068493],
                    65: [0.5068493],
                    66: [0.5068493],
                    67: [0.5068493],
                    68: [0.5068493],
                    69: [0.5068493],
                    70: [0.5068493],
                    71: [0.5068493],
                    72: [0.5068493],
                    73: [0.5068493],
                    74: [0.5068493],
                    75: [0.5068493],
                    76: [0.5068493],
                    77: [0.5068493],
                    78: [0.5068493],
                    79: [0.5068493],
                    80: [0.5068493],
                    81: [0.5068493],
                    82: [0.5068493],
                    83: [0.5068493],
                    84: [0.5068493],
                    85: [0.5068493],
                    86: [0.5068493],
                    87: [0.5068493],
                    88: [0.5068493],
                    89: [0.5068493],
                    90: [0.5068493],
                    91: [0.5068493],
                    92: [0.5068493],
                    93: [0.5068493],
                    94: [0.5068493],
                    95: [0.5068493],
                    96: [0.5068493],
                    97: [0.5068493],
                    98: [0.5068493],
                    99: [0.5068493],
                    100: [0.5068493],
                    101: [0.5068493],
                    102: [0.5068493],
                    103: [0.5068493],
                    104: [0.5068493],
                    105: [0.5068493],
                    106: [0.5068493],
                    107: [0.5068493],
                    108: [0.5068493],
                    109: [0.5068493],
                    110: [0.5068493],
                    111: [0.5068493],
                    112: [0.5068493],
                    113: [0.5068493],
                    114: [0.5068493],
                    115: [0.5068493],
                    116: [0.5068493],
                    117: [0.5068493],
                    118: [0.5068493],
                    119: [0.5068493],
                    120: [0.5068493],
                    121: [0.5068493],
                    122: [0.5068493],
                    123: [0.5068493],
                    124: [0.5068493],
                    125: [0.5068493],
                    126: [0.5068493],
                    127: [0.5068493],
                    128: [0.5068493],
                    129: [0.5068493],
                    130: [0.5068493],
                    131: [0.5068493],
                    132: [0.5068493],
                    133: [0.5068493],
                    134: [0.5068493],
                    135: [0.5068493],
                    136: [0.5068493],
                    137: [0.5068493],
                    138: [0.5068493],
                    139: [0.5068493],
                    140: [0.5068493],
                    141: [0.5068493],
                    142: [0.5068493],
                    143: [0.5068493],
                    144: [0.5068493],
                    145: [0.5068493],
                    146: [0.5068493],
                    147: [0.5068493],
                    148: [0.5068493],
                    149: [0.5068493],
                    150: [0.5068493],
                    151: [0.5068493],
                    152: [0.5068493],
                    153: [0.5068493],
                    154: [0.5068493],
                    155: [0.5068493],
                    156: [0.5068493],
                    157: [0.5068493],
                    158: [0.5068493],
                    159: [0.5068493],
                    160: [0.5068493],
                    161: [0.5068493],
                    162: [0.5068493],
                    163: [0.5068493],
                    164: [0.5068493],
                    165: [0.5068493],
                    166: [0.5068493],
                    167: [0.5068493],
                    168: [0.5068493],
                    169: [0.5068493],
                    170: [0.5068493],
                    171: [0.5068493],
                    172: [0.5068493],
                    173: [0.5068493],
                    174: [0.5068493],
                    175: [0.5068493],
                    176: [0.5068493],
                    177: [0.5068493],
                    178: [0.5068493],
                    179: [0.5068493],
                    180: [0.5068493],
                    181: [0.5068493],
                    182: [0.5068493],
                    183: [0.5068493],
                    184: [0.5068493],
                    185: [0.5068493],
                    186: [0.5068493],
                    187: [0.5068493],
                    188: [0.5068493],
                    189: [0.5068493],
                    190: [0.5068493],
                    191: [0.5068493],
                    192: [0.5068493],
                    193: [0.5068493],
                    194: [0.5068493],
                    195: [0.5068493],
                    196: [0.5068493],
                    197: [0.5068493],
                    198: [0.5068493],
                    199: [0.5068493],
                    200: [0.5068493],
                    201: [0.5068493],
                    202: [0.5068493],
                    203: [0.5068493],
                    204: [0.5068493],
                    205: [0.5068493],
                    206: [0.5068493],
                    207: [0.5068493],
                    208: [0.5068493],
                    209: [0.5068493],
                    210: [0.5068493],
                    211: [0.5068493],
                    212: [0.5068493],
                    213: [0.5068493],
                    214: [0.5068493],
                    215: [0.5068493],
                    216: [0.5068493],
                    217: [0.5068493],
                    218: [0.5068493],
                    219: [0.5068493],
                    220: [0.5068493],
                    221: [0.5068493],
                    222: [0.5068493],
                    223: [0.5068493],
                    224: [0.5068493],
                    225: [0.5068493],
                    226: [0.5068493],
                    227: [0.5068493],
                    228: [0.5068493],
                    229: [0.5068493],
                    230: [0.5068493],
                    231: [0.5068493],
                    232: [0.5068493],
                    233: [0.5068493],
                    234: [0.5068493],
                    235: [0.5068493],
                    236: [0.5068493],
                    237: [0.5068493],
                    238: [0.5068493],
                    239: [0.5068493],
                    240: [0.5068493],
                    241: [0.5068493],
                    242: [0.5068493],
                    243: [0.5068493],
                    244: [0.5068493],
                    245: [0.5068493],
                    246: [0.5068493],
                    247: [0.5068493],
                    248: [0.5068493],
                    249: [0.5068493],
                    250: [0.5068493],
                }
            }
        }
    }

    def Scope "_materials"
    {
        def Material "Material"
        {
            token outputs:surface.connect = </root/_materials/Material/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.8, 0.8, 0.8)
                float inputs:ior = 1.45
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.5
                float inputs:specular = 0.5
                token outputs:surface
            }
        }
    }
}

